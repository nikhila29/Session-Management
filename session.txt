https://developer.okta.com/blog/2021/06/07/session-mgmt-node#session-sniffing

https://medium.com/swlh/session-management-in-nodejs-using-redis-as-session-store-64186112aa9




-------------------------------------------------------------------difference between Cookies and Session------------------------------------------

                            Cookies                                                                      Session

------>  Cookies are client-side files that are stored on a local                ---> Sessions are server-side files that store user information
 computer and contain user information

 ----> Cookies expire after the user specified lifetime.                         ----->The session ends when the user closes the browser or logs out of the program.





 ---------------------------------------------------------------REDIS----------------------------------------------------------------------------------

 --->   Redis is an open source (BSD licensed), in-memory data structure store used as a database, cache, message broker, and streaming engine.


-----Middleware-------

 The middleware in node. js is a function that will have all the access for requesting an object, 
 responding to an object, and moving to the next middleware function in the application request-response cycle.


 ------------------------------------------What is bodyParser for?------------------------------------------------

---->  body-parser extracts the entire body portion of an incoming request stream and exposes it on req. body . 
-----> The middleware was a part of Express. js earlier but now you have to install it separately. 
----> This body-parser module parses the JSON, buffer, string and URL encoded data submitted using HTTP POST request.


let redisClient;

(async () => {
  redisClient = redis.createClient({
        host: 'localhost',
        legacyMode: true,
        port: 6379
    });

  redisClient.on('error', (err) => console.log('Redis Client Error', err));

  await redisClient.connect();
  
})();